import 'dart:convert';

class Dependente {
  late String _nome;

  Dependente(String nome) {
    this._nome = nome;
  }
  
  // Método para converter em Json 
  
  Map<String, dynamic> toJson() => {
        'nome': _nome,
      };
}

class Funcionario {
  late String _nome;
  late List<Dependente> _dependentes;

  Funcionario(String nome, List<Dependente> dependentes) {
    this._nome = nome;
    this._dependentes = dependentes;
  }
   Map<String, dynamic> toJson() => {
        'nome': _nome,
        'dependentes': _dependentes.map((d) => d.toJson()).toList(),
      };
}

class EquipeProjeto {
  late String _nomeProjeto;
  late List<Funcionario> _funcionarios;

  EquipeProjeto(String nomeprojeto, List<Funcionario> funcionarios) {
    _nomeProjeto = nomeprojeto;
    _funcionarios = funcionarios;
  }
   Map<String, dynamic> toJson() => {
        'nomeProjeto': _nomeProjeto,
        'funcionarios': _funcionarios.map((f) => f.toJson()).toList(),
      };
}

void main() {
  
  // 1. Criar vários objetos Dependentes
  
  var dep1 = Dependente("José");
  var dep2 = Dependente('Esther');
  var dep3 = Dependente('Carlos');
  var dep4 = Dependente('Eduarda');
    
  // 2. Criar vários objetos Funcionário
  // 3. Associar os Dependentes criados aos respectivos funcionários
  
   var func1 = Funcionario('Tadeu', [dep1, dep2]);
  var func2 = Funcionario('Josy', [dep3]);
  var func3 = Funcionario('Amanda', [dep4]);
  
  // 4. Criar uma lista de Funcionarios
  
  var funcionarios = [func1, func2, func3];
  
  /* 5. Criar um objeto Equipe Projeto chamando o método
     contrutor que da nome ao projeto e insere uma
     coleção de funcionário*/
  
   var equipe = EquipeProjeto('Projeto ABC', funcionarios);
  
  // 6. Printar no formato JSON o objeto Equipe Projeto.
  
  var jsonEquipe = jsonEncode(equipe.toJson());
  print(jsonEquipe);
}
